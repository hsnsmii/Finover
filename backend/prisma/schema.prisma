generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String         @id @default(uuid())
  email              String         @unique
  passwordHash       String         @map("password_hash")
  passwordAlgo       String         @map("password_algo")
  passwordParamsJson Json           @map("password_params_json")
  createdAt          DateTime       @default(now()) @map("created_at")
  updatedAt          DateTime       @updatedAt @map("updated_at")

  refreshTokens      RefreshToken[]
  watchlists         Watchlist[]

  @@map("users")
}

model RefreshToken {
  id         String   @id @default(uuid())
  userId     String   @map("user_id")
  jti        String
  tokenHash  String   @map("token_hash")
  expiresAt  DateTime @map("expires_at")
  revokedAt  DateTime? @map("revoked_at")
  createdAt  DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([jti])
  @@index([userId])
  @@index([userId, revokedAt])
  @@map("refresh_tokens")
}

model Watchlist {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  name      String
  type      String?  @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user    User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  entries WatchlistEntry[]

  @@index([userId, type])
  @@map("watchlists")
}

model WatchlistEntry {
  id          String   @id @default(uuid())
  watchlistId String   @map("watchlist_id")
  symbol      String
  quantity    Decimal? @db.Decimal(18, 4)
  price       Decimal? @db.Decimal(18, 4)
  note        String?  @db.Text
  tradeDate   DateTime? @map("trade_date")
  createdAt   DateTime @default(now()) @map("created_at")

  watchlist Watchlist @relation(fields: [watchlistId], references: [id], onDelete: Cascade)

  @@index([watchlistId])
  @@map("watchlist_entries")
}
