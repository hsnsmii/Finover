{"version":3,"file":"primitiveConverter.js","sourceRoot":"","sources":["../../../src/js/utils/primitiveConverter.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAAC,SAAoB;IACpD,IAAI,SAAS,KAAK,IAAI,EAAE;QACtB,OAAO,EAAE,CAAC;KACX;IAED,QAAQ,OAAO,SAAS,EAAE;QACxB,KAAK,QAAQ;YACX,OAAO,SAAS,CAAC;QACnB,KAAK,SAAS;YACZ,OAAO,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;QAC9C,KAAK,QAAQ,CAAC;QACd,KAAK,QAAQ;YACX,OAAO,GAAG,SAAS,EAAE,CAAC;QACxB,KAAK,WAAW;YACd,OAAO,SAAS,CAAC;QACnB,KAAK,QAAQ;YACX,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC9B;YACE,OAAO,SAAmB,CAAC;KAC9B;AACH,CAAC","sourcesContent":["import type { Primitive } from '@sentry/core';\n\n/**\n * Converts primitive to string.\n */\nexport function PrimitiveToString(primitive: Primitive): string | undefined {\n  if (primitive === null) {\n    return '';\n  }\n\n  switch (typeof primitive) {\n    case 'string':\n      return primitive;\n    case 'boolean':\n      return primitive == true ? 'True' : 'False';\n    case 'number':\n    case 'bigint':\n      return `${primitive}`;\n    case 'undefined':\n      return undefined;\n    case 'symbol':\n      return primitive.toString();\n    default:\n      return primitive as string;\n  }\n}\n"]}